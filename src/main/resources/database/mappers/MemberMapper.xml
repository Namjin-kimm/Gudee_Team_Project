<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goodee.market.member.MemberDAO">

	<!-- 로그인 -->
	<select id="getLogin" parameterType="MemberDTO" resultMap="getLoginResult">
		SELECT M.MEMBERNUM, M.ID, M.NICKNAME, M.NAME, M.EMAIL, M.PHONE, M.MAIN_ADDRESS,
		M.DETAIL_ADDRESS, M.POSTCODE, M.BIRTHDAY, M.CASH, R.* FROM
		MEMBER M
		INNER JOIN
		MEMBER_ROLES MR
		ON M.MEMBERNUM = MR.MEMBERNUM 
		INNER JOIN
		ROLES R
		ON MR.ROLENUM = R.ROLENUM
		WHERE M.ID = #{id} AND M.PASSWORD = #{password}
	</select>
	
	<resultMap type="MemberDTO" id="getLoginResult">
		<id column="MEMBERNUM" property="memberNum"/>
		<result column="ID" property="id"/>
		<result column="NAME" property="name"/>
		<result column="NICKNAME" property="nickname"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="MAIN_ADDRESS" property="main_address"/>
		<result column="DETAIL_ADDRESS" property="detail_address"/>
		<result column="POSTCODE" property="postcode"/>
		<result column="BIRTHDAY" property="birthday"/>
		<result column="CASH" property="cash"/>
		<collection property="roleDTOs" javaType="List" ofType="RoleDTO">
			<id column="ROLENUM" property="roleNum"/>
			<result column="ROLENAME" property="roleName"/>
		</collection>
	</resultMap>
	
	<!-- 회원가입 -->
	<insert id="setJoin" parameterType="MemberDTO">
	<!-- Sequence를 미리 해나 빼서 memberNum에 저장 -->
	<selectKey keyProperty="memberNum" order="BEFORE" resultType="Long">
            SELECT MEMBER_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT INTO MEMBER(MEMBERNUM, ID, PASSWORD, NAME, NICKNAME, EMAIL, PHONE, JOINDATE, CASH, BIRTHDAY, MAIN_ADDRESS, DETAIL_ADDRESS, POSTCODE)
		VALUES(#{memberNum}, #{id}, #{password}, #{name}, #{nickname}, #{email}, #{phone}, SYSDATE, 0, #{birthday}, #{main_address}, #{detail_address}, #{postcode})
	</insert>
	
	<insert id="setMemberRoles">
		INSERT INTO MEMBER_ROLES (ROLENUM, MEMBERNUM)
		VALUES (2, #{memberNum})
	</insert>
	
	<!-- 파일추가 -->
	<insert id="setAddFile" parameterType="MemberFileDTO">
		INSERT INTO MEMBERIMAGE(FILENUM, FILENAME, ORINAME, MEMBERNUM)
		VALUES (MEMBERIMAGE_SEQ.NEXTVAL, #{fileName}, #{oriName}, #{memberNum})
	</insert>
	
	<!-- 회원정보 수정 시 불러오는 회원정보 -->
	<select id="getMemberDetail" parameterType="MemberDTO" resultMap="getMyPageResult">
		SELECT * FROM 
		MEMBER M
		INNER JOIN
		MEMBERIMAGE MI
		ON M.MEMBERNUM = MI.MEMBERNUM
		WHERE M.MEMBERNUM = #{memberNum}
	</select>
	
	<resultMap type="MemberDTO" id="getMyPageResult">
		<id column="MEMBERNUM" property="memberNum"/>
		<result column="ID" property="id"/>
		<result column="PASSWORD" property="password"/>
		<result column="NAME" property="name"/>
		<result column="NICKNAME" property="nickname"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="MAIN_ADDRESS" property="main_address"/>
		<result column="DETAIL_ADDRESS" property="detail_address"/>
		<result column="POSTCODE" property="postcode"/>
		<result column="BIRTHDAY" property="birthday"/>
		<association property="memberFileDTO" javaType="MemberFileDTO">
			<id column="FILENUM" property="fileNum"/>
			<result column="FILENAME" property="fileName"/>
		</association>
	</resultMap>
	
	
	<!-- 프로필사진 정보 불러오기 -->
	<select id="getFileDetail" parameterType="MemberFileDTO" resultType="MemberFileDTO">
	 	SELECT * FROM MEMBERIMAGE WHERE FILENUM = #{fileNum}
	</select>
	
	<!-- 프로필사진 삭제 -->
	<delete id="setFileDelete" parameterType="MemberFileDTO">
	 	DELETE MEMBERIMAGE WHERE FILENUM = #{fileNum}
	</delete>
	
	<update id="setInfoUpdate" parameterType="MemberDTO">
		UPDATE MEMBER SET PASSWORD = #{password}, NAME = #{name}, NICKNAME = #{nickname}, 
		EMAIL = #{email}, PHONE = #{phone}, MAIN_ADDRESS = #{main_address}, DETAIL_ADDRESS = #{detail_address}, POSTCODE = #{postcode}
		WHERE MEMBERNUM = #{memberNum}
	</update>
	
	<select id="getMLList" parameterType="MemberDTO" resultMap="getMLList">
		SELECT M.MEMBERNUM, MI.FILENUM, MI.FILENAME, 
		ML.MLMNUM , ML.MEETINGBOARDNUM , MB.MEETINGBOARDTITLE 
		FROM 
		MEMBER M
		INNER JOIN
		MEMBERIMAGE MI
		ON M.MEMBERNUM = MI.MEMBERNUM
		INNER JOIN
		MEETINGLIKE_MEMBER ML
		ON M.MEMBERNUM = ML.MEMBERNUM
		INNER JOIN
		MEETINGBOARD MB
		ON ML.MEETINGBOARDNUM = MB.MEETINGBOARDNUM 
		WHERE M.MEMBERNUM = #{memberNum}
	</select>
	
	<resultMap type="MemberDTO" id="getMLList">
		<id column="MEMBERNUM" property="memberNum"/>
		<association property="memberFileDTO" javaType="MemberFileDTO">
			<id column="FILENUM" property="fileNum"/>
			<result column="FILENAME" property="fileName"/>
		</association>
		<collection javaType="List" ofType="MeetingLikeDTO" property="meetingLikeDTOs">
			<id column="MLMNUM" property="mlmNum"/>
			<result column="MEETINGBOARDNUM" property="meetingBoardNum"/>
		</collection>
		<collection  javaType="List" ofType="MeetingBoardDTO" property="meetingBoardDTOs">
			<result column="MEETINGBOARDTITLE" property="meetingBoardTitle"/>
			<result column="MEETINGBOARDNUM" property="meetingBoardNum"/>
		</collection>
	</resultMap>
	
	<insert id="setReport">
		INSERT INTO MEMBERREPORT (REPORTMEMBERNUM, REPORTEDMEMBERNUM, REPORTCONTENT)
		VALUES (#{reportMemberNum}, #{reportedMemberNum}, #{reportContent})
	</insert>
	
	

</mapper>